cowplot::theme_minimal_grid()+
labs(x = "", y = "ENSO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))+
scale_x_discrete(breaks = PM_PDO_enso$MonthYr[seq(1, length(PM_PDO_enso$MonthYr), by = 10)]) +
scale_y_continuous(name = "ENSO Index",sec.axis = sec_axis(trans=~./3, name="Average Daily Binary Presence"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_PM_Timeseries.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_PM_Timeseries.png',sep=""))
}
## Boxplots + Stats for categories
#T-Test for PDO
#Summary stats
PM_PDO_enso %>%
group_by(phasePDO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot PDO cateogry
ggplot(PM_PDO_enso, aes(x=phasePDO, y=PreAbs)) +
geom_boxplot() + labs(x="PDO Phase",y= "Average Daily Binary Presence")+
ggtitle("PDO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'PDO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/PDO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phasePDO) %>%
identify_outliers(PreAbs)
#t-test
stat.test.PDO <- PM_PDO_enso %>%
t_test(PreAbs ~ phasePDO) %>%
add_significance()
stat.test.PDO
#ANOVA for ENSO
#Summary stats
PM_PDO_enso %>%
group_by(phaseENSO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot enso cateogry
ggplot(PM_PDO_enso, aes(x=phaseENSO, y=PreAbs)) +
geom_boxplot() + labs(x="ENSO Phase",y= "Average Daily Binary Presence")+
ggtitle("ENSO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phaseENSO) %>%
identify_outliers(PreAbs)
#ANOVA
res.aov <- PM_PDO_enso %>% anova_test(PreAbs ~ phaseENSO)
res.aov
#Save stats
if (sexData == 1){
filename = paste(saveWorkspace,NAME,'_',sex,'_PDO_ENSO_stats.txt',sep="")
}else{
filename = paste(saveWorkspace,NAME,'_PDO_ENSO_stats.txt',sep="")
}
sink(filename)
stat.test.PDO
res.aov
sink(file = NULL)
stat.test.PDO
res.aov
ggplot(PM_PDO_enso, aes(x=PreAbs, y=ONI))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "ENSO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "ENSO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(PM_PDO_enso, aes(x=PreAbs, y=PDO))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "PDO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "PDO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
library(rsoi)             #ENSO data
library(tidyverse)        #Data wrangling
library(ggplot2)          #Plotting
library(lubridate)        #Dealing with dates
library(ggpubr)           #Stats
library(rstatix)          #Stats
#User Defined Variables
NAME = 'AllSites' #specify the region or site of interest
site = 0 #site = 1, region = 2, All-Site mode = 0
sexData = 1 #sex specific stats = 1, general = 0
sex = 'MidSize'
GDrive= 'G'
#Access ENSO data
enso = rsoi::download_enso()
enso$MonthYr = format(enso$Date, "%Y-%m") #Add Month and Year column
enso$phaseENSO = enso$phase
#Acess PDO data
pdo = rsoi::download_pdo()
#Add PDO Phase
pdo$phasePDO = 1
pdo$phasePDO[pdo$PDO >= 0] = 'Warm'
pdo$phasePDO[pdo$PDO < 0] = 'Cool'
pdo$MonthYr = format(pdo$Date, "%Y-%m") #Add Month and Year column
#Load the PM data
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites", sep="")
saveDir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/Plots/",NAME, sep="")
saveWorkspace = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",NAME,'/',sep="")
if (sexData == 1){
fileName = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites/AllSitesGrouped_Binary_GAMGEE_ROW_sexClasses.csv",sep="") #setting the directory
}else{
fileName = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites/AllSitesGrouped_Binary_GAMGEE_ROW.csv",sep="") #setting the directory
}
HourTable = read.csv(fileName)
HourTable = na.omit(HourTable)
HourTable$date = as.Date(HourTable$tbin)
HourTable$tbin = as.POSIXct(HourTable$tbin)
HourTable = HourTable[ order(HourTable$tbin , decreasing = FALSE ),]
if (site == 1){
SiteHourTable = dplyr::filter(HourTable, grepl(NAME,Site))
}else if (site == 2){
SiteHourTable = dplyr::filter(HourTable, grepl(NAME,Region))
}else{
SiteHourTable = HourTable
}
SiteHourTable$Hour = hour(SiteHourTable$tbin)
SiteHourTable$Month = month(SiteHourTable$tbin)
SiteHourTable$Effort_Bin[SiteHourTable$Effort_Bin > 12] = 12
SiteHourTable = SiteHourTable[!(SiteHourTable$Julian==366),] #If it's a leap year, delete julian day 366
SiteHourTable$MonthYr = format(SiteHourTable$tbin, "%Y-%m") #Add Month and Year column
if (sex == 'SocialGroups'){
SiteMonthTable = aggregate(PreAbsF~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else if (sex == 'MidSize'){
SiteMonthTable = aggregate(PreAbsJ~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else if (sex == 'Males'){
SiteMonthTable = aggregate(PreAbsM~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else{
SiteMonthTable = aggregate(PreAbs~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}
colnames(SiteMonthTable) = c('MonthYr','PreAbs')
#Combine tables for months and years that we have PM data
PM_PDO = merge(SiteMonthTable,pdo,by="MonthYr")
PM_PDO_enso = merge(PM_PDO,enso,by="MonthYr")
PM_PDO_enso = subset(PM_PDO_enso, select = -c(Month.x,Date.x,Date.y,Year.y,Month.y,phase))
PM_PDO_enso_Year = aggregate(cbind(PreAbs,PDO,ONI,SOI,NPGO)~Year.x, data =PM_PDO_enso,FUN = mean) #aggregate data by year
#Plots
#Linear Model PDO
LM_SIC = lm(formula = PDO~PreAbs,data = PM_PDO_enso)
ggplot(PM_PDO_enso, aes(x=PreAbs, y=PDO))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "PDO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "PDO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'GLM_PDO.png',sep=""))
}else{
ggsave(paste(saveDir,'/GLM_PDO.png',sep=""))
}
#Plot All of PDO
pdo.plot = ggplot(data = pdo, aes(x = Date, y = PDO, fill = phasePDO))+
geom_col()+
scale_fill_manual(values = c("blue","red"), name = "") +
cowplot::theme_minimal_grid()+
labs(x = "", y = "PDO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))
pdo.plot %>%
plotly::ggplotly() %>%
plotly::layout(legend = list(orientation = "h", x = 0.4, y = 1.1))
#Plot PDO + PM
ggplot(data = PM_PDO_enso, aes(x = MonthYr, y = PDO, fill = phasePDO))+
geom_col()+
scale_fill_manual(values = c("blue","red"), name = "") +
geom_point(aes(x=MonthYr,y=PreAbs*3),size = 1.5,color="black")+
cowplot::theme_minimal_grid()+
labs(x = "", y = "PDO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted")) +
scale_x_discrete(breaks = PM_PDO_enso$MonthYr[seq(1, length(PM_PDO_enso$MonthYr), by = 10)]) +
scale_y_continuous(name = "PDO Index",sec.axis = sec_axis(trans=~./3, name="Average Daily Binary Presence"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'PDO_PM_Timeseries.png',sep=""))
}else{
ggsave(paste(saveDir,'/PDO_PM_Timeseries.png',sep=""))
}
#Plot ENSO
#Linear Model ENSO
LM_SIC = lm(formula = ONI~PreAbs,data = PM_PDO_enso)
ggplot(PM_PDO_enso, aes(x=PreAbs, y=ONI))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "ENSO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "ENSO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'GLM_ENSO.png',sep=""))
}else{
ggsave(paste(saveDir,'/GLM_ENSO.png',sep=""))
}
enso.plot = ggplot(data = enso, aes(x = Date, y = ONI, fill = phase))+
geom_col()+
scale_fill_manual(values = c("blue","green", "red"), name = "") +
cowplot::theme_minimal_grid()+
labs(x = "", y = "ENSO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))
enso.plot %>%
plotly::ggplotly() %>%
plotly::layout(legend = list(orientation = "h", x = 0.4, y = 1.1))
#Plot ENSO + PM
ggplot(data = PM_PDO_enso, aes(x = MonthYr, y = ONI, fill = phaseENSO))+
geom_col()+
scale_fill_manual(values = c("blue","green", "red"), name = "") +
geom_point(aes(x=MonthYr,y=PreAbs*3),size = 1.5,color="black")+
cowplot::theme_minimal_grid()+
labs(x = "", y = "ENSO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))+
scale_x_discrete(breaks = PM_PDO_enso$MonthYr[seq(1, length(PM_PDO_enso$MonthYr), by = 10)]) +
scale_y_continuous(name = "ENSO Index",sec.axis = sec_axis(trans=~./3, name="Average Daily Binary Presence"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_PM_Timeseries.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_PM_Timeseries.png',sep=""))
}
## Boxplots + Stats for categories
#T-Test for PDO
#Summary stats
PM_PDO_enso %>%
group_by(phasePDO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot PDO cateogry
ggplot(PM_PDO_enso, aes(x=phasePDO, y=PreAbs)) +
geom_boxplot() + labs(x="PDO Phase",y= "Average Daily Binary Presence")+
ggtitle("PDO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'PDO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/PDO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phasePDO) %>%
identify_outliers(PreAbs)
#t-test
stat.test.PDO <- PM_PDO_enso %>%
t_test(PreAbs ~ phasePDO) %>%
add_significance()
stat.test.PDO
#ANOVA for ENSO
#Summary stats
PM_PDO_enso %>%
group_by(phaseENSO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot enso cateogry
ggplot(PM_PDO_enso, aes(x=phaseENSO, y=PreAbs)) +
geom_boxplot() + labs(x="ENSO Phase",y= "Average Daily Binary Presence")+
ggtitle("ENSO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phaseENSO) %>%
identify_outliers(PreAbs)
#ANOVA
res.aov <- PM_PDO_enso %>% anova_test(PreAbs ~ phaseENSO)
res.aov
#Save stats
if (sexData == 1){
filename = paste(saveWorkspace,NAME,'_',sex,'_PDO_ENSO_stats.txt',sep="")
}else{
filename = paste(saveWorkspace,NAME,'_PDO_ENSO_stats.txt',sep="")
}
sink(filename)
stat.test.PDO
res.aov
sink(file = NULL)
stat.test.PDO
res.aov
ggplot(PM_PDO_enso, aes(x=PreAbs, y=ONI))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "ENSO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "ENSO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(PM_PDO_enso, aes(x=PreAbs, y=PDO))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "PDO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "PDO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
library(rsoi)             #ENSO data
library(tidyverse)        #Data wrangling
library(ggplot2)          #Plotting
library(lubridate)        #Dealing with dates
library(ggpubr)           #Stats
library(rstatix)          #Stats
#User Defined Variables
NAME = 'AllSites' #specify the region or site of interest
site = 0 #site = 1, region = 2, All-Site mode = 0
sexData = 1 #sex specific stats = 1, general = 0
sex = 'Males'
GDrive= 'G'
#Access ENSO data
enso = rsoi::download_enso()
enso$MonthYr = format(enso$Date, "%Y-%m") #Add Month and Year column
enso$phaseENSO = enso$phase
#Acess PDO data
pdo = rsoi::download_pdo()
#Add PDO Phase
pdo$phasePDO = 1
pdo$phasePDO[pdo$PDO >= 0] = 'Warm'
pdo$phasePDO[pdo$PDO < 0] = 'Cool'
pdo$MonthYr = format(pdo$Date, "%Y-%m") #Add Month and Year column
#Load the PM data
dir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites", sep="")
saveDir = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/Plots/",NAME, sep="")
saveWorkspace = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/",NAME,'/',sep="")
if (sexData == 1){
fileName = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites/AllSitesGrouped_Binary_GAMGEE_ROW_sexClasses.csv",sep="") #setting the directory
}else{
fileName = paste(GDrive,":/My Drive/GofAK_TPWS_metadataReduced/SeasonalityAnalysis/AllSites/AllSitesGrouped_Binary_GAMGEE_ROW.csv",sep="") #setting the directory
}
HourTable = read.csv(fileName)
HourTable = na.omit(HourTable)
HourTable$date = as.Date(HourTable$tbin)
HourTable$tbin = as.POSIXct(HourTable$tbin)
HourTable = HourTable[ order(HourTable$tbin , decreasing = FALSE ),]
if (site == 1){
SiteHourTable = dplyr::filter(HourTable, grepl(NAME,Site))
}else if (site == 2){
SiteHourTable = dplyr::filter(HourTable, grepl(NAME,Region))
}else{
SiteHourTable = HourTable
}
SiteHourTable$Hour = hour(SiteHourTable$tbin)
SiteHourTable$Month = month(SiteHourTable$tbin)
SiteHourTable$Effort_Bin[SiteHourTable$Effort_Bin > 12] = 12
SiteHourTable = SiteHourTable[!(SiteHourTable$Julian==366),] #If it's a leap year, delete julian day 366
SiteHourTable$MonthYr = format(SiteHourTable$tbin, "%Y-%m") #Add Month and Year column
if (sex == 'SocialGroups'){
SiteMonthTable = aggregate(PreAbsF~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else if (sex == 'MidSize'){
SiteMonthTable = aggregate(PreAbsJ~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else if (sex == 'Males'){
SiteMonthTable = aggregate(PreAbsM~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}else{
SiteMonthTable = aggregate(PreAbs~MonthYr, data =SiteHourTable,FUN = mean) #aggregate data by month
}
colnames(SiteMonthTable) = c('MonthYr','PreAbs')
#Combine tables for months and years that we have PM data
PM_PDO = merge(SiteMonthTable,pdo,by="MonthYr")
PM_PDO_enso = merge(PM_PDO,enso,by="MonthYr")
PM_PDO_enso = subset(PM_PDO_enso, select = -c(Month.x,Date.x,Date.y,Year.y,Month.y,phase))
PM_PDO_enso_Year = aggregate(cbind(PreAbs,PDO,ONI,SOI,NPGO)~Year.x, data =PM_PDO_enso,FUN = mean) #aggregate data by year
#Plots
#Linear Model PDO
LM_SIC = lm(formula = PDO~PreAbs,data = PM_PDO_enso)
ggplot(PM_PDO_enso, aes(x=PreAbs, y=PDO))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "PDO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "PDO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'GLM_PDO.png',sep=""))
}else{
ggsave(paste(saveDir,'/GLM_PDO.png',sep=""))
}
#Plot All of PDO
pdo.plot = ggplot(data = pdo, aes(x = Date, y = PDO, fill = phasePDO))+
geom_col()+
scale_fill_manual(values = c("blue","red"), name = "") +
cowplot::theme_minimal_grid()+
labs(x = "", y = "PDO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))
pdo.plot %>%
plotly::ggplotly() %>%
plotly::layout(legend = list(orientation = "h", x = 0.4, y = 1.1))
#Plot PDO + PM
ggplot(data = PM_PDO_enso, aes(x = MonthYr, y = PDO, fill = phasePDO))+
geom_col()+
scale_fill_manual(values = c("blue","red"), name = "") +
geom_point(aes(x=MonthYr,y=PreAbs*3),size = 1.5,color="black")+
cowplot::theme_minimal_grid()+
labs(x = "", y = "PDO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted")) +
scale_x_discrete(breaks = PM_PDO_enso$MonthYr[seq(1, length(PM_PDO_enso$MonthYr), by = 10)]) +
scale_y_continuous(name = "PDO Index",sec.axis = sec_axis(trans=~./3, name="Average Daily Binary Presence"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'PDO_PM_Timeseries.png',sep=""))
}else{
ggsave(paste(saveDir,'/PDO_PM_Timeseries.png',sep=""))
}
#Plot ENSO
#Linear Model ENSO
LM_SIC = lm(formula = ONI~PreAbs,data = PM_PDO_enso)
ggplot(PM_PDO_enso, aes(x=PreAbs, y=ONI))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "ENSO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "ENSO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'GLM_ENSO.png',sep=""))
}else{
ggsave(paste(saveDir,'/GLM_ENSO.png',sep=""))
}
enso.plot = ggplot(data = enso, aes(x = Date, y = ONI, fill = phase))+
geom_col()+
scale_fill_manual(values = c("blue","green", "red"), name = "") +
cowplot::theme_minimal_grid()+
labs(x = "", y = "ENSO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))
enso.plot %>%
plotly::ggplotly() %>%
plotly::layout(legend = list(orientation = "h", x = 0.4, y = 1.1))
#Plot ENSO + PM
ggplot(data = PM_PDO_enso, aes(x = MonthYr, y = ONI, fill = phaseENSO))+
geom_col()+
scale_fill_manual(values = c("blue","green", "red"), name = "") +
geom_point(aes(x=MonthYr,y=PreAbs*3),size = 1.5,color="black")+
cowplot::theme_minimal_grid()+
labs(x = "", y = "ENSO Index") +
theme(legend.position = "top", panel.grid = element_line(linetype = "dotted"))+
scale_x_discrete(breaks = PM_PDO_enso$MonthYr[seq(1, length(PM_PDO_enso$MonthYr), by = 10)]) +
scale_y_continuous(name = "ENSO Index",sec.axis = sec_axis(trans=~./3, name="Average Daily Binary Presence"))
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_PM_Timeseries.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_PM_Timeseries.png',sep=""))
}
## Boxplots + Stats for categories
#T-Test for PDO
#Summary stats
PM_PDO_enso %>%
group_by(phasePDO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot PDO cateogry
ggplot(PM_PDO_enso, aes(x=phasePDO, y=PreAbs)) +
geom_boxplot() + labs(x="PDO Phase",y= "Average Daily Binary Presence")+
ggtitle("PDO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'PDO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/PDO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phasePDO) %>%
identify_outliers(PreAbs)
#t-test
stat.test.PDO <- PM_PDO_enso %>%
t_test(PreAbs ~ phasePDO) %>%
add_significance()
stat.test.PDO
#ANOVA for ENSO
#Summary stats
PM_PDO_enso %>%
group_by(phaseENSO) %>%
get_summary_stats(PreAbs, type = "mean_sd")
#Plot enso cateogry
ggplot(PM_PDO_enso, aes(x=phaseENSO, y=PreAbs)) +
geom_boxplot() + labs(x="ENSO Phase",y= "Average Daily Binary Presence")+
ggtitle("ENSO Phase")
if (sexData == 1){
ggsave(paste(saveDir,'/',sex,'ENSO_BoxPlots.png',sep=""))
}else{
ggsave(paste(saveDir,'/ENSO_BoxPlots.png',sep=""))
}
#Check for outliers
PM_PDO_enso %>%
group_by(phaseENSO) %>%
identify_outliers(PreAbs)
#ANOVA
res.aov <- PM_PDO_enso %>% anova_test(PreAbs ~ phaseENSO)
res.aov
#Save stats
if (sexData == 1){
filename = paste(saveWorkspace,NAME,'_',sex,'_PDO_ENSO_stats.txt',sep="")
}else{
filename = paste(saveWorkspace,NAME,'_PDO_ENSO_stats.txt',sep="")
}
sink(filename)
stat.test.PDO
res.aov
sink(file = NULL)
stat.test.PDO
res.aov
ggplot(PM_PDO_enso, aes(x=PreAbs, y=ONI))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "ENSO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "ENSO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
#Plots
#Linear Model PDO
LM_SIC = lm(formula = PDO~PreAbs,data = PM_PDO_enso)
ggplot(PM_PDO_enso, aes(x=PreAbs, y=PDO))+
geom_point() + geom_smooth(method="lm", col="black") +
stat_regline_equation() +  theme_bw() + #label.x = 450, label.y = 2.2
labs(title = "PDO vs. Monthly Hourly Presence",
x = "Monthly Hourly Binary Presence/Absence (sum)",
y = "PDO")+ theme(axis.text=element_text(size=15),
axis.title=element_text(size=16,face="bold"))
